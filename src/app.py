import dash
from dash import dcc
import dash_bootstrap_components as dbc
from dash import html
import pandas as pd
import plotly.express as px

LOGO = "https://geoinfomatics.unn.edu.ng/wp-content/uploads/sites/155/2018/05/land-survey.png"
# ... (your code for layout and initialization)

# Create a dropdown for CSV file selection
csv_file_dropdown = dcc.Dropdown(
    id='csv-file-dropdown',
    options=[
        {'label': 'Sparse Points', 'value': 'static/NG_mobile coverage (1).csv'},
        {'label': 'Points Generated by GPR', 'value': 'static/Gussian_estimated_coverage_combined_filtered.csv'},
         {'label': 'Points Generated by  IDW', 'value': 'static/Idw_interpolated_data_filtered.csv'},
           {'label': 'Points Generated by SPLINE', 'value': 'static/Spline_combined_coverage_estimates_filtered.csv'},
           {'label': 'Points Generated by Krigging', 'value': 'static/Krigging_filtered.csv'},


           
        # Add options for all 12 CSV files
    ],
    value='static/NG_mobile coverage (1).csv'  # Default selected file
)

app = dash.Dash(__name__, 
                external_stylesheets=[dbc.themes.LUX],
                title='AI interpolation techniques | Network Coverage Map',
                meta_tags=[{'name': 'viewport',
                            'content': 'width=device-width, height=device-height, initial-scale=1.0, maximum-scale=1.2'}]
                )
server = app.server

navbar = dbc.Navbar(
                [
                html.A(
                        # Use row and col to control vertical alignment of logo / brand
                        dbc.Row(
                                [   dbc.Col(html.Img(src=LOGO, height="30px")),
                                    dbc.Col(dbc.NavbarBrand("|Nigeria Network Coverage Map", className="ml-2")),
                                ],
                                align="center",
                                # no_gutters=True,
                                ),
                        href="https://www.geomaap.io/about",
                    ),
                ],
                color="dark",
                dark=True,
                className="mb-4",
)


credits_tab = dbc.Card(
    dbc.CardBody(
        dcc.Markdown(
            """
            Made with love with Dash by python Artifical Intelligence Group  
            Emeka Jessica,
            Kalu David-dien,
            Olajumoke Adebayo,
            Osita Osita Stephen,
      
            """
        ),
    ),
    className="mt-0",
)

credits_tab2 = dbc.Card(
    dbc.CardBody(
        dcc.Markdown(
            """    Supervised by Dr. Iyke Maduako
            """
        ),
    ),
    className="mt-0",
)
# Longitude_Input=dbc.Input(value=7.352275,placeholder="input Longitude",type="number",id='longi')
# Latitude_Input=dbc.Input(value=5.111047,type="number",placeholder="input Latitude",id='lati', )

# Modify the layout to include the dropdown
app.layout = dbc.Container(
    [
        navbar,
        dbc.Row(
            [
                dbc.Col(  # left layout
                    [credits_tab2 ,
                        credits_tab,
                        dbc.CardHeader("Select Data To Display"),
                        csv_file_dropdown,  # Add the dropdown here
                        dbc.CardHeader("Search For A Location"),
                        # Latitude_Input,
                        # Longitude_Input,
                        dbc.CardHeader("Select the network type from the dropdown"),
                        dcc.Dropdown(
                            id='network-type-dropdown',
                            options=[
                                {'label': '2G', 'value': 'percent_2g'},
                                {'label': '3G', 'value': 'percent_3g'},
                                {'label': '4G', 'value': 'percent_4g'}
                            ],
                            value='percent_4g'
                        )
                    ],
                    width=3),
                dbc.Col( # right layout
                    [
                        dcc.Graph(id='coverage-map')
                    ],
                    width=9,
                ),
            ]
        ),
    ],
    fluid=True,
)

# Create a callback function to update the DataFrame based on CSV file selection
@app.callback(
    dash.dependencies.Output('coverage-map', 'figure'),
    [dash.dependencies.Input('csv-file-dropdown', 'value'),
     dash.dependencies.Input('network-type-dropdown', 'value'),
    #  dash.dependencies.Input('longi', 'value'),
    #  dash.dependencies.Input('lati', 'value'),
     ]
)
def update_graph(selected_csv_file, network_type
                #   longitude, latitude
                  ):
    # Read the selected CSV file into a DataFrame
    df = pd.read_csv(selected_csv_file)
    
    # Create the coverage map using Plotly Express
    fig = px.scatter_mapbox(df, lat='latitude', lon='longitude', color=network_type, mapbox_style="carto-positron",
                  color_continuous_scale=px.colors.cyclical.IceFire, size_max=15, zoom=10)
    fig.update_layout(height=800)
    return fig

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)

